---
# tasks file for master
- name: Reset Kubernetes masters
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: "Initialize Kubernetes masters ({{ kubernetes_version }})"
  remote_user: pi
  shell: kubeadm init  --token={{ token }} --kubernetes-version={{ kubernetes_version }} --node-name={{ groups['master_nodes'][0] }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded
  become: yes

#- name: Create Kubernetes /root/.kube directory
#  file:
#    path: /root/.kube/
#    state: directory
#    owner: root
#    group: root
#    mode: 0755
#
#- name: Copy /etc/kubernetes/admin.conf to /root/.kube/config
#  copy:
#    src: /etc/kubernetes/admin.conf
#    dest: /root/.kube/config
#    owner: root
#    group: root
#    mode: 0755
#    remote_src: yes
#    backup: yes
#  become: yes
#  when: kubeadm_init

- name: Create Kubernetes config file
  remote_user: pi
  file:
    path: /home/pi/.kube
    state: directory
    owner: pi
    group: pi
    mode: u=rw,g=r,o=r
  when: kubeadm_init
  become: no
  become_user: pi
  register: kubedir

- name: Copy /etc/kubernetes/admin.conf to /home/pi/.kube/config
  remote_user: pi
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/pi/.kube/config
    remote_src: yes
    backup: yes
  become: yes
  when: kubedir
  register: kubefile

- name: chown for /home/pi/.kube/config file
  remote_user: pi
  file:
    path: /home/pi/.kube/config
    owner: pi
    group: pi
    mode: u=rw,g=r,o=r
  become: yes
  when: kubefile

  #sudo usermod -aG docker pi
  #mkdir -p $HOME/.kube
  #sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  #sudo chown $(id -u):$(id -g) $HOME/.kube/config
  # sudo swapoff -a
#- name: "{{ groups['master_nodes'][0] }} is joining a cluster"
#  shell: kubeadm join {{ groups['master_nodes'][0] }}:6443 --discovery-token-ca-cert-hash {{ ca_cert_hash }}
#  when: kubeadm_reset is succeeded
#  register: kubeadm_join


# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/{{ flannel_version }}/Documentation/kube-flannel.yml
- name: Install Flannel (Networking)
  shell: files/kube-flannel.yml
  register: flannel_installed

- name: Poke kubelet
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  when: flannel_installed
  register: kubelet_poke

- name: Reboot {{ groups['master_nodes'][0] }}
  shell: sleep 2 && reboot "Ansible Reboot"
  async: 1
  poll: 0
  ignore_errors: True
  when: cmdline or timezone or hostname is changed

- name: Wait for reboot
  wait_for_connection:
    delay: 15
    timeout: 120