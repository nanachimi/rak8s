---
# tasks file for master
- name: Reset Kubernetes masters
  become_user: root
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: "Initialize Kubernetes masters"
  become_user: root
  shell: kubeadm init  --token={{ token }} --apiserver-advertise-address={{ hostvars['node00prod'].ansible_host }} --kubernetes-version={{ kubernetes_version }} --node-name={{ groups['master_nodes'][0] }} --pod-network-cidr={{ pod_network_cidr }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded

- name: Pulling Kubernetes images
  become_user: root
  shell: kubeadm config images pull
  register: kube_config

- name: Create Kubernetes /root/.kube directory
  become_user: root
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy /etc/kubernetes/admin.conf to /root/.kube/config
  become_user: root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    backup: yes
    remote_src: yes
  when: kubeadm_init

- name: Copy /etc/kubernetes/admin.conf to /home/pi/
  become_user: root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/pi/
    backup: yes
    remote_src: yes

- name: chown for /home/pi/admin.conf file
  become_user: root
  file:
    path: /home/pi/admin.conf
    owner: '1000'
    group: '1000'
    remote_src: yes

- name: Exporting KUBECONFIG as env variable
  lineinfile:
    path: /home/pi/.bashrc
    regexp: '^KUBECONFIG='
    line: export KUBECONFIG=/home/pi/admin.conf

- name: Install Flannel {{ flannel_version }} for cluster networking
  become_user: root
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/{{ flannel_version }}/Documentation/kube-flannel.yml

- name: Reboot the master
  become_user: root
  shell: sleep 2 && reboot "Rebooting master nodes by Ansible"
  async: 1
  poll: 0
  ignore_errors: True
  when: cmdline or timezone or hostname is changed

- name: Wait for reboot
  wait_for_connection:
    delay: 15
    timeout: 120