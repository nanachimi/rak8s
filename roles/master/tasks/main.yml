---

# tasks file for master
- name: Reset Kubernetes masters
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: Initialize master node {{ master_node }}
  shell: kubeadm init --pod-network-cidr={{ pod_network_cidr }}  --apiserver-advertise-address={{ ansible_default_ipv4.address }} --node-name={{ master_node }}  --kubernetes-version={{ kubernetes_version }}
  become: yes
  register: kubeadm_init
  when: kubeadm_reset is succeeded

- debug: var=kubeadm_init.stdout_lines

- name: Create Kubernetes /home/pi/.kube/ directory
  file:
    path: /home/pi/.kube/
    state: directory
    owner: pi
    group: pi
    mode: u=rw,g=rw,o=r
  register: kubedir

- name: Make /home/pi/.kube accessible by pi:pi
  file:
    path: /home/pi/.kube
    owner: pi
    group: pi
    state: directory
    recurse: yes
    mode: 1777
  register: kubediraccess

- name: Copy /etc/kubernetes/admin.conf to /home/pi/.kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/pi/.kube/config
    owner: pi
    group: pi
    remote_src: yes
    backup: yes
    mode: 0777
  become: yes
  when: kubediraccess
  register: kubefile

- name: Wait for port 6443 to become open on the host
  wait_for:
    port: 6443
    delay: 5
    timeout: 60
  when: kubefile
  register: port8080up

- name: Download Flannel
  get_url:
    url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    dest: /home/pi/.kube/
    mode: '0777'
    owner: pi
    group: pi
  when: port8080up
  register: flannel_downloaded

- name: Install Flannel Networking ({{ flannel_version }})
  shell: "kubectl apply -f kube-flannel.yml"
  become_user: pi
  args:
      chdir: .kube/
  when: flannel_downloaded

- name: Reboot master node
  shell: sleep 2 && reboot "Ansible Reboot"
  async: 1
  poll: 0
  ignore_errors: True
  when: cmdline or timezone or hostname is changed

- name: Wait for reboot
  wait_for_connection:
    delay: 10
    timeout: 120